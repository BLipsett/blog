(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{477:function(t,s,a){"use strict";a.r(s);var e=a(2),i=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"what-is-scope"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-scope"}},[t._v("#")]),t._v(" What is Scope ?")]),t._v(" "),a("ul",[a("li",[t._v("Scope is the environment a variable lives in.")])]),t._v(" "),a("h3",{attrs:{id:"what-is-hoisting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-hoisting"}},[t._v("#")]),t._v(" What is Hoisting ?")]),t._v(" "),a("ul",[a("li",[t._v("When the file is interpreted a varible\nor function declarition is initialized at the top of its scope.")])]),t._v(" "),a("h3",{attrs:{id:"in-what-cases-might-you-use-let-vs-const-vs-var"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#in-what-cases-might-you-use-let-vs-const-vs-var"}},[t._v("#")]),t._v(" In what cases might you use let vs const vs var?")]),t._v(" "),a("ul",[a("li",[t._v("Const for a variable or function you dont want to be changed. Var for something you want declared in the local scope. Let for everything else that you are willing to update")])]),t._v(" "),a("h5",{attrs:{id:"https-github-com-blipsett-js-tests-loops-and-arrays-commits-master"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#https-github-com-blipsett-js-tests-loops-and-arrays-commits-master"}},[t._v("#")]),t._v(" https://github.com/BLipsett/js-tests-loops-and-arrays/commits/master")])])}),[],!1,null,null,null);s.default=i.exports}}]);